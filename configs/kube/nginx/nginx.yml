---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-nginx-custom
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    # nginx.ingress.kubernetes.io/backend-protocol:  "GRPCS"
    nginx.ingress.kubernetes.io/proxy-ssl-verify: "off"
    nginx.ingress.kubernetes.io/proxy-ssl-server-name: "on"
    nginx.ingress.kubernetes.io/proxy-ssl-name: "$host"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - '*.default.apps.platform.localtest.me'
      secretName: nginx-internal-tls
  rules:
  - host: '*.default.apps.platform.localtest.me'
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx-svc
            port:
              number: 443

---
kind: Service
apiVersion: v1
metadata:
  name: nginx-svc
spec:
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 443
      targetPort: 443
      name: nginx

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginxconf
data:
  default.conf: |
    server {
      listen 443 ssl;
      http2 on;

      ssl_certificate     /etc/nginx/tls/tls.crt;
      ssl_certificate_key /etc/nginx/tls/tls.key;

      server_name  ~^(?<subdomain>.*?)\.default\.apps\.platform\.localtest\.me$;
      resolver  kube-dns.kube-system.svc.cluster.local  valid=5s;

      set $connection_upgrade "";
      if ($http_upgrade ~* "websocket") { set $connection_upgrade "upgrade"; }

      location  / {
        proxy_pass  http://$subdomain.default.svc.cluster.local;
        proxy_set_header  Host  $host;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        # for grpc
        # grpc_pass http://$subdomain.default.svc.cluster.local:80;
        # grpc_set_header   Host  $host;
      }
    }

    # server {
    #   listen 443 ssl;
    #   http2 on;

    #   ssl_certificate     /etc/nginx/tls/tls.crt;
    #   ssl_certificate_key /etc/nginx/tls/tls.key;

    #   server_name  ~^(?<subdomain>.*?)\.default\.apps\.platform\.localtest\.me$;
    #   resolver  kube-dns.kube-system.svc.cluster.local  valid=5s;

    #   location  / {
    #     grpc_pass grpc://$subdomain.default.svc.cluster.local:80;
    #     grpc_set_header   Host  $host;
    #     grpc_read_timeout  600s;
    #     grpc_send_timeout  600s;
    #     grpc_socket_keepalive on;
    #   }
    # }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:alpine
          ports:
            - containerPort: 80
            # - containerPort: 443
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
            - name: nginx-tls
              mountPath: /etc/nginx/tls
              readOnly: true
      volumes:
        - name: nginx-config
          configMap:
            name: nginxconf
        - name: nginx-tls
          secret:
            secretName: nginx-internal-tls
            # tls タイプで生成された secret は、tls.crt tls.key で必ず管理されている
            items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
